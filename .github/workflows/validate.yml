name: "Validate"

on: [ "push", "pull_request" ]

jobs:
  linting:
    name: "Linting (PHP ${{ matrix.php-versions }})"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-versions: [ "8.1", "8.2" ]

    steps:
      # 1. Checkout repository
      - name: "Checkout repository"
        uses: "actions/checkout@v5"

      # 2. Setup PHP & Composer (with Symfony CLI)
      - name: "Setup PHP with Composer and extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "mbstring, xml, ctype, iconv, intl, gd"
          tools: "composer:v2, symfony-cli"

      # 3. Cache Composer dependencies
      - name: "Get Composer cache directory"
        id: "composer-cache"
        run: 'echo "dir=$(symfony composer config cache-files-dir)" >> $GITHUB_OUTPUT'

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v4"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-composer-"

      # 4. Validate & install dependencies
      - name: "Validate Composer configuration"
        run: "symfony composer validate --no-interaction"

      - name: "Install Composer dependencies"
        run: "symfony composer install --prefer-dist --no-progress --optimize-autoloader --no-interaction"

      # 5. Run linter
      - name: "Lint codebase"
        run: "make lint"
