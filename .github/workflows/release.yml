name: "Release"

on:
  push:
    tags: [ 'v*' ] # Runs only on version tags, e.g. v1.0, v2.5.3

jobs:
  release:
    name: "Build & Publish Release"
    runs-on: "ubuntu-latest"

    steps:
      # 1. Checkout repository
      - name: "Checkout repository"
        uses: "actions/checkout@v5"

      # 2. Setup PHP & Composer
      - name: "Setup PHP with Composer and extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1"
          extensions: "mbstring, xml, ctype, iconv, intl, gd"
          tools: "composer:v2, symfony-cli"

      # 3. Cache Composer dependencies
      - name: "Get Composer cache directory"
        id: "composer-cache"
        run: 'echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT'

      - name: "Cache Composer dependencies"
        uses: "actions/cache@v4"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-composer-"

      # 4. Validate & install dependencies
      - name: "Validate Composer configuration"
        run: "symfony composer validate --no-interaction"

      - name: "Install Composer dependencies"
        run: "symfony composer install --prefer-dist --no-progress --optimize-autoloader --no-interaction"

      # 5. Build ZIP using Makefile
      - name: "Build ZIP artifact"
        run: "make build"

      # 6. Create GitHub Release & upload ZIP
      - name: "Create GitHub Release"
        id: "create_release"
        uses: "softprops/action-gh-release@v2"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          name: "Release ${{ github.ref_name }}"
          files: "./build/cryptwerk.zip"
          fail_on_unmatched_files: true
          generate_release_notes: true
